import{_ as e,c as t,o as a,ag as o}from"./chunks/framework.CLdIrKxh.js";const b=JSON.parse('{"title":"2023 年度概览","description":"","frontmatter":{},"headers":[],"relativePath":"years/2023.md","filePath":"years/2023.md"}'),r={name:"years/2023.md"},c=o('<h1 id="_2023-年度概览" tabindex="-1">2023 年度概览 <a class="header-anchor" href="#_2023-年度概览" aria-label="Permalink to &quot;2023 年度概览&quot;">​</a></h1><h2 id="本年发布-13" tabindex="-1">本年发布 13 <a class="header-anchor" href="#本年发布-13" aria-label="Permalink to &quot;本年发布 13&quot;">​</a></h2><table><thead><tr><th>年份</th><th>总记</th><th>1月</th><th>2月</th><th>3月</th><th>4月</th><th>5月</th><th>6月</th><th>7月</th><th>8月</th><th>9月</th><th>10月</th><th>11月</th><th>12月</th></tr></thead><tbody><tr><td>2023</td><td>13</td><td>1</td><td>5</td><td>4</td><td>2</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>1</td><td>-</td></tr></tbody></table><h2 id="文章列表" tabindex="-1">文章列表 <a class="header-anchor" href="#文章列表" aria-label="Permalink to &quot;文章列表&quot;">​</a></h2><h3 id="bpmn-js-交流群附属资料-文档及开源库" tabindex="-1">bpmn-js 交流群附属资料(文档及开源库) <a class="header-anchor" href="#bpmn-js-交流群附属资料-文档及开源库" aria-label="Permalink to &quot;bpmn-js 交流群附属资料(文档及开源库)&quot;">​</a></h3><blockquote><p>霖呆呆的 bpmn-js 交流群整合的讨论资料。目前已收纳中文文档、开源编辑器、开源模板、工具仓库、表单引擎等内容...</p><p><a href="https://juejin.cn/post/7304831120710434868" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>6548 阅读 · 39 点赞 · 8 评论 · 54 收藏</strong></p><p>📅 2023-11-24 🏷 <code>前端</code> <code>JavaScript</code></p><h3 id="关于工作流开发前端选型的一点个人见解-bpmn-js与logicflow" tabindex="-1">关于工作流开发前端选型的一点个人见解（bpmn.js与LogicFlow） <a class="header-anchor" href="#关于工作流开发前端选型的一点个人见解-bpmn-js与logicflow" aria-label="Permalink to &quot;关于工作流开发前端选型的一点个人见解（bpmn.js与LogicFlow）&quot;">​</a></h3><blockquote><p>首先需要明确的一点是，本文的出发点 纯粹是针对工作流开发 的场景的选型对比，其他业务场景下建议重新调研。 什么是工作流？ 工作流，即 Workflow，是对工作流程及其...</p><p><a href="https://juejin.cn/post/7213547986483380282" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>12930 阅读 · 97 点赞 · 27 评论 · 117 收藏</strong></p><p>📅 2023-03-23 🏷 <code>前端</code> <code>掘金·金石计划</code></p><h3 id="vue2与vue3响应式原理与依赖收集详解" tabindex="-1">Vue2与Vue3响应式原理与依赖收集详解 <a class="header-anchor" href="#vue2与vue3响应式原理与依赖收集详解" aria-label="Permalink to &quot;Vue2与Vue3响应式原理与依赖收集详解&quot;">​</a></h3><blockquote><p>继 Angular 和 React 之后，尤大在 2016 年发布了如今“前端三剑客”之一的 Vue 2.0，并凭借其简单易用、轻量高效的特点受到了广泛的欢迎，特别...</p><p><a href="https://juejin.cn/post/7202454684657107005" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>6763 阅读 · 138 点赞 · 27 评论 · 196 收藏</strong></p><p>📅 2023-02-21 🏷 <code>前端</code> <code>Vue.js</code> <code>JavaScript</code></p><h3 id="史上最详细的-vue-3-渲染过程与-diff-图解" tabindex="-1">史上最详细的 Vue 3 渲染过程与 diff 图解 <a class="header-anchor" href="#史上最详细的-vue-3-渲染过程与-diff-图解" aria-label="Permalink to &quot;史上最详细的 Vue 3 渲染过程与 diff 图解&quot;">​</a></h3><blockquote><p>在 Vue 3 中，对模板的编译和渲染做了大量的优化，在编译阶段通过 动态节点收集和静态节点提升，为渲染阶段的性能提升打下了坚实的基础...</p><p><a href="https://juejin.cn/post/7217693476494262329" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>5822 阅读 · 80 点赞 · 22 评论 · 118 收藏</strong></p><p>📅 2023-04-03 🏷 <code>前端</code> <code>Vue.js</code> <code>掘金·金石计划</code></p><h3 id="vue-3-vnode-编译优化" tabindex="-1">Vue 3 VNode 编译优化 <a class="header-anchor" href="#vue-3-vnode-编译优化" aria-label="Permalink to &quot;Vue 3 VNode 编译优化&quot;">​</a></h3><blockquote><p>前言 在之前的 从 CreateApp 开始学习 Vue 源码 到 史上最详细的 Vue 3 渲染过程与 diff 图解 两篇文章中，我们已经了解了 Vue 3 在最初实例化一个 app 应用实例到 ...</p><p><a href="https://juejin.cn/post/7224430957222461477" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>3544 阅读 · 18 点赞 · 1 评论 · 14 收藏</strong></p><p>📅 2023-04-21 🏷 <code>前端</code> <code>Vue.js</code> <code>掘金·金石计划</code></p><h3 id="从-createapp-开始学习-vue-源码" tabindex="-1">从 CreateApp 开始学习 Vue 源码 <a class="header-anchor" href="#从-createapp-开始学习-vue-源码" aria-label="Permalink to &quot;从 CreateApp 开始学习 Vue 源码&quot;">​</a></h3><blockquote><p>从 Vue 3 在 2020 年 9 月发布到现在，也已经两年半的时间了，期间经过大大小小的优化和迭代，目前 Vue 3 已经快成为 Vue 新项目的首选版本，Vue 2 也即将停止维护，所以现在写...</p><p><a href="https://juejin.cn/post/7213211041764261948" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>5154 阅读 · 23 点赞 · 10 评论 · 32 收藏</strong></p><p>📅 2023-03-22 🏷 <code>前端</code> <code>Vue.js</code> <code>掘金·金石计划</code></p><h3 id="vue2-diff-算法图解" tabindex="-1">Vue2 diff 算法图解 <a class="header-anchor" href="#vue2-diff-算法图解" aria-label="Permalink to &quot;Vue2 diff 算法图解&quot;">​</a></h3><blockquote><p>Vue 2 的 diff 算法相对于简单 diff 算法来说，通过 双端对比与生成索引 map 两种方式 减少了简单算法中的多次循环操作，新旧数组均只需要进行一次遍历即可将所有节点进行对比。...</p><p><a href="https://juejin.cn/post/7211132346255638584" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>5778 阅读 · 54 点赞 · 14 评论 · 78 收藏</strong></p><p>📅 2023-03-16 🏷 <code>前端</code> <code>Vue.js</code> <code>掘金·金石计划</code></p><h3 id="从npm-create-vite到项目创建结束——create-vite全流程揭秘" tabindex="-1">从npm create vite到项目创建结束——create-vite全流程揭秘 <a class="header-anchor" href="#从npm-create-vite到项目创建结束——create-vite全流程揭秘" aria-label="Permalink to &quot;从npm create vite到项目创建结束——create-vite全流程揭秘&quot;">​</a></h3><blockquote><p>之前关注 川佬（若川） 的源码共读活动已经很久了，只是一直没有没有静下心来跟着川佬一起学习，直到今年年初才加入了川佬的源码共读交流群。对于如何学习源码也是一头雾水，所以...</p><p><a href="https://juejin.cn/post/7209863093672509499" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>6220 阅读 · 29 点赞 · 16 评论 · 30 收藏</strong></p><p>📅 2023-03-13 🏷 <code>前端</code> <code>Vite</code> <code>掘金·金石计划</code></p><h3 id="ref-—-vue-3-基础类型响应方案" tabindex="-1">Ref — Vue 3 基础类型响应方案 <a class="header-anchor" href="#ref-—-vue-3-基础类型响应方案" aria-label="Permalink to &quot;Ref — Vue 3 基础类型响应方案&quot;">​</a></h3><blockquote><p>在之前的 Vue2与Vue3响应式原理与依赖收集详解 和 通过一个例子解析 Vue 3 Watch 的工作原理 中，已经大致讲述了 Vue 3 中对 对象 的响应式处理方...</p><p><a href="https://juejin.cn/post/7205047834792869947" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>4100 阅读 · 16 点赞 · 6 评论 · 12 收藏</strong></p><p>📅 2023-02-28 🏷 <code>前端</code> <code>JavaScript</code> <code>Vue.js</code></p><h3 id="通过一个例子解析-vue-3-watch-的工作原理" tabindex="-1">通过一个例子解析 Vue 3 Watch 的工作原理 <a class="header-anchor" href="#通过一个例子解析-vue-3-watch-的工作原理" aria-label="Permalink to &quot;通过一个例子解析 Vue 3 Watch 的工作原理&quot;">​</a></h3><blockquote><p>之前在一个大佬的粉丝群里看到了这样一个问题，具体代码如下： 疑问就是为什么有些情况下会不生效？ watch 函数定义 首先我们看一下官方对 watch 函数参数与返...</p><p><a href="https://juejin.cn/post/7204735262961041465" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>3525 阅读 · 17 点赞 · 3 评论 · 13 收藏</strong></p><p>📅 2023-02-27 🏷 <code>前端</code> <code>JavaScript</code> <code>Vue.js</code></p><h3 id="vue-3-effect-任务调度详解" tabindex="-1">Vue 3 Effect 任务调度详解 <a class="header-anchor" href="#vue-3-effect-任务调度详解" aria-label="Permalink to &quot;Vue 3 Effect 任务调度详解&quot;">​</a></h3><blockquote><p>结合前面两篇文章中的内容，我们分析了 Vue 3 响应式系统的 基础实现部分，包括 操作拦截 与 依赖收集，并且也分析了依赖收集过程中 Effect 副作用嵌套和循...</p><p><a href="https://juejin.cn/post/7204485453570768955" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>3269 阅读 · 16 点赞 · 3 评论 · 16 收藏</strong></p><p>📅 2023-02-27 🏷 <code>前端</code> <code>JavaScript</code> <code>Vue.js</code></p><h3 id="vue-3-的-effect-函数的嵌套与循环处理" tabindex="-1">Vue 3 的 Effect 函数的嵌套与循环处理 <a class="header-anchor" href="#vue-3-的-effect-函数的嵌套与循环处理" aria-label="Permalink to &quot;Vue 3 的 Effect 函数的嵌套与循环处理&quot;">​</a></h3><blockquote><p>在之前的 Vue2与Vue3响应式原理与依赖收集详解 一文中，我们讲述了 Vue 2 与 Vue 3 在实现数据响应式处理的设计思路与他们的不同之处，也分析了 Vu...</p><p><a href="https://juejin.cn/post/7202996870250479671" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>2903 阅读 · 16 点赞 · 4 评论 · 19 收藏</strong></p><p>📅 2023-02-22 🏷 <code>前端</code> <code>JavaScript</code> <code>Vue.js</code></p><h3 id="虽喜忧参半-仍愿来年亦如是" tabindex="-1">虽喜忧参半，仍愿来年亦如是 <a class="header-anchor" href="#虽喜忧参半-仍愿来年亦如是" aria-label="Permalink to &quot;虽喜忧参半，仍愿来年亦如是&quot;">​</a></h3><blockquote><p>在打开编辑器准备开始写下这篇文章时，仅仅标题便让我沉思许久~ 从 17 年毕业，到 18 年年底正式开始从事前端开发，到如今 2022 结束，一晃已经是 5 年过去，期间有难过、有快乐、有焦虑、有满足...</p><p><a href="https://juejin.cn/post/7183732899311517755" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>2347 阅读 · 66 点赞 · 46 评论 · 3 收藏</strong></p><p>📅 2023-01-01 🏷 <code>年终总结</code> <code>前端</code></p>',56),d=[c];function p(n,h,u,l,s,i){return a(),t("div",null,d)}const k=e(r,[["render",p]]);export{b as __pageData,k as default};
